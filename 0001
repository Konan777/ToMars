
\Dialogs\ClbrTaskEditDialog.cs

1) UI
--------------------------------------------------------------------------------------------------------------
private ClbrGraphEditController _TestController;
public ClbrGraphEditController TestController => _TestController;

private void InitControls()
	_TestController = new ClbrGraphEditController(_dm, _clbrGraph);
    var result = TestController.ClbrGraphSeries.Select(t => t.Name).ToList();
	^^^ сменить в гриде 1 биндинг с SeriesName на Name
private void _gleChkS_EditSeriesValueChanged(object sender, EventArgs e)
	var selected = (ClbrGraphSeries)_gleChkS.GetSelectedDataRow();
	^^^ ClbrTaskSeriesTestModel надо менять на ClbrGraphSeries
	_tlSTST.DataSource = TestController.GetSeriesTestWraps(selected.ClbrGraphSeriesUid);
    ^^^ сменить в гриде 2 биндинг с ClbrTaskSeriesTestModel на ClbrGraphSeriesTestWrap

2) SAVE
--------------------------------------------------------------------------------------------------------------
Feature\UI\CalibrationGraphView.cs
private void SaveClbrTask(ClbrTask clbrTask, ClbrGraph clbrGraph)
^^^ сохранение
private void _bTaskAddClick(object sender, EventArgs e)
^^^ вызывается на нажатию (+) ???

сделать testCtrlr пабликом
в CalibrationGraphView подхвативать его на private void SaveClbrTask(ClbrTask clbrTask, ClbrGraph clbrGraph) 
как dlg.TestController
в ClbrGraphEditController сделать метод для сохранения шаблона как теста
SaveGraphAsTest
                    foreach (var sr in _testCtrlr.ClbrGraphSeries)
                    {
                        var taskSeries = new ClbrTaskSeries()
                        {
                            ClbrGraphSeriesUid = sr.ClbrGraphSeriesUid,
                            ClbrTaskSeriesUid = Guid.NewGuid()
                        };
                        _dm.CalibrationDataService.ClbrTaskSeriesInsert(ref taskSeries);
                        foreach (var tst in sr.GraphSeriesTests)
                        {
                            var seriesTest = new ClbrTaskSeriesTest()
                            {
                                AbsErr = tst.AbsErr ?? 0,
                                ClbrGraphSeriesTestUid = tst.ClbrGraphSeriesTestUid,
                                ClbrTaskSeriesTestUid = Guid.NewGuid(),
                                ClbrTaskSeriesUid = taskSeries.ClbrTaskSeriesUid,
                                Value = tst.Value
                            };
                            _dm.CalibrationDataService.ClbrTaskSeriesTestInsert(ref seriesTest);
                        }
                    }
	
