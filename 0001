C:\!Indus\Branches\Malahit_BMU\Source\Indusoft.LDS.Client.IC\Model\CheckResultFormInfo.cs
C:\!Indus\Branches\Malahit_BMU\Source\Indusoft.LDS.Client.IC\Features\UI\CheckResultFormViewControl.cs
C:\!Indus\Branches\Malahit_BMU\Source\Indusoft.LDS.Client.IC\Data\SA.cs

Ну эм, прокинуть как свойство или в конструктор, либо само значени либо прямо Content


Голубев 21:42
из этого класса нет доступа к возможности. нужно что-то придумывать

поговорим в личке


Антон Бурдин 21:42
Этот класс создается из CheckResultFormTypeViewControl

у которого есть доступ к возможностям

А вот у второго контруктора нету

второй создается из SA


Голубев 21:44
да


а что за задача? какие настройки нужно получить?

21:45
задача http://tfs2012:8080/tfs/Indusoft/BMU/_workitems?id=107812&_a=edit

Антон Бурдин 21:46
Ну можно в SA прокидывать контент и изменять его при измении фичи, и вот тебе доступ к настройкам в SA
нет, в SA ты будешь просто прокидывать данный enum или что там, и пихать его в конструктор CheckResultFormInfo, а в CheckResultFormTypeViewControl у тебя и так есть доступ

У тебя в CheckResultFormTypeViewControl должен быть метод, который вызывается при смене возможности

и там переназначается контент


Голубев 21:48
        public void SetFeatureNode(CheckResultFormFeature featureNode)

1) в public void SetFeatureNode(CheckResultFormFeature featureNode) пробрасываем настройку в SA регион CheckResultForm. 
2) Смотрим есть ли вызов конструктора CheckResultFormInfo при выборе пункта меню
3) Встраиваемся либо в конструктор CheckResultFormInfo либо в AlgsCollectionDesignActionPerformer подхватим настройку из SA.



