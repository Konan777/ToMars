Лакмусовая бумажка архитектурного решения

Я неоднократно писал о лакмусовой бумажке хорошего дизайна. Когда я рассматриваю дизайн класса или модуля, то стараюсь понять насколько он является цельным и слабосвязным (все те же low coupling и high cohesion) с помощью юнит-тестов. Если их написать невозможно или они будут невменяемыми, то это говорит мне, что с дизайном что-то не то.

А как определить качество архитектурного решения? Чтобы понять, как далеко некоторое решение проникло (или проникнет) в разные части системы, я задаю себе такой вопрос: «А что если я ошибся и мне придется изменить это решение в будущем? Какие будут последствия?». Если некоторое решение размазано ровным слоем по всему приложению, то стоимость его изменения будет огромной, а значит это решение является архитектурным.

В хорошо спроектированной системе мы должны стараться изолировать свои ошибки минимальным количеством модулей. Хороший дизайн позволяет отложить многие «важные архитектурные решения» на более позднюю стадию проекта, когда вероятность их верного принятия существенно выше. Другими словами, чем меньше архитектурных решений принято на проекте, тем лучше его архитектура.
