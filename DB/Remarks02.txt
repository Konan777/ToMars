D:\Work\!RBO\!BMU\Source\Indusoft.LDS.Client.AnalysisInputControl\Controls\AnalysisTableInputControl.cs
                    if (AICManager.Instance.CurrTask.ExtensionUid == Services.Contracts.EQP.RS.Guids.EqpTaskExtensionUid)
                    {
                        #region Создание образца для контроля параметров оборудования

                        try
                        {

                            SampleInfo sInfo;
                            if (_aod == null)
                            {
                                var eqp = DataManager.Instance.GetEqp(groupKey);
                                var tcs = LabAnalysisTaskManager.Instance.GetTaskContent(AICManager.Instance.CurrTask.TaskUid);
                                sInfo = new SampleInfo(SampleType.Eqp, AICManager.Instance.CurrTask, date, tcs);
                            }
                            else
                            {
                                if (!AICManager.Instance.CurrTask.ResultKey.HasValue && !_aod.SampleType.HasValue)
                                    _aod.SampleType = (int)SampleType.Rooms;
                                sInfo = new SampleInfo(_aod, true);
                            }

                            if (sampleDialogShowed)
                                return;

                            try
                            {
                                sampleDialogShowed = true;
                                var taskUid = AICManager.Instance.CurrTask.TaskUid;
                                if (sInfo.ShowSampleDialog(AICManager.Instance.CurrTask.TaskUid))
                                {
                                    MakeParent(pCtl);

                                    if (taskUid != AICManager.Instance.CurrTask.TaskUid)
                                    {
                                        PrepareEmptyControl();
                                        MsgBox.ShowInfo(Resources.SampleIsRegistrated);
                                    }
                                    else
                                    {
                                        SampleCommandsState(false, true);
                                        if (SampleUid != sInfo.SampleId)
                                        {
                                            SampleUid = sInfo.SampleId;
                                            PrepareControl();
                                        }
                                    }

                                    // печать этикетки, если есть соответвующие настройки в журнале образцов
                                    PrintLabel(sInfo, AICManager.Instance.CurrTask.TaskUid, AICManager.Instance.CurrTask.ExtensionUid);
                                }
                                else
                                {
                                    MakeParent(pCtl);
                                    SampleCommandsState(true, false);
                                    UIConfigurator.Instance.ReselectCommandState = false;
                                    UIConfigurator.Instance.CopySampleCommandState = false;
                                    UIConfigurator.Instance.AddTestsCommandState = false;
                                    UIConfigurator.Instance.AddReplicationsCommandState = false;
                                    UIConfigurator.Instance.AddReplicationsSeriesCommandState = false;
                                    UIConfigurator.Instance.RemReplicationsCommandState = false;
                                    UIConfigurator.Instance.RemReplicationsSeriesCommandState = false;
                                    UIConfigurator.Instance.RemSelectedReplicationsCommandState = false;
                                }
                            }
                            finally
                            {
                                sampleDialogShowed = false;
                            }
                        }
                        catch (Exception ex)
                        {
                            Logger.Instance.Error(RS.Logs.LogErrorRegPattern, ex);
                            throw new ApplicationException(RS.Errors.AnalysisTableInputControlErrorRegPattern, ex);
                        }

                        #endregion
                    }
