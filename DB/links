Вопросы:
0) Посмотреть что пишем в UserRegistrations для FixedBets
1) Начальный атом для автогенерации
2) Атом по умолчанию и Начальный атом для автогенерации это одно и тоже?

https://scottiestech.info/2015/11/12/fix-uefi-bios-boot-problems-on-a-new-motherboard/
https://egigiena.ru/kupi/detyam/gc-tooth-mousse-klubnika/?utm_source=market.yandex.ru&utm_medium=price&utm_campaign=xml&utm_content=goodprogrammist&_openstat=bWFya2V0LnlhbmRleC5ydTtHQyBUb290aCBNb3Vzc2Ug0YDQtdC80LjQvdC10YDQsNC70LjQt9C40YDRg9GO0YnQuNC5INCz0LXQu9GMLCDQutC70YPQsdC90LjQutCwO0p3d3F0Ty1ySXlKWTRMU3lxYUxTd1E7&frommarket=https%3A%2F%2Fmarket.yandex.ru%2Fproduct--zubnoi-gel-gc-corporation-t&ymclid=15586733034109507693300002

Right click on the database name
Choose Tasks > Generate scripts
Depending on your settings the intro page may show or not
Choose 'Select specific database objects',
Expand the tree view and check the relevant tables
Click Next
Click Advanced
Under General section, choose the appropriate option for 'Types of data to script'
Complete the wizard


		-- Игроки у которых нет ставок >90 дней но есть запись в таблице UserRegistrations
		-- при этом берем только 1 запись в FixedBets у которой DateTime<90 дней от текущей даты
		SELECT CAST(UR.[DateTime] AS DATE) as [DateTime], UR.[AtomId], UR.[Version], COUNT(*) AS [Уснувшие игроки], 0 AS [Реактивированные игроки]
		FROM [crm].[UserRegistrations] UR 
		INNER JOIN (
			SELECT UserID, DateTime
				,ROW_NUMBER() OVER (PARTITION BY UserId ORDER BY DateTime) AS [RowNumber]
				FROM [crm].[FixedBets]
				WHERE DateTime<(GetDate()-90)
		) FB on FB.[UserId]=UR.[UserId]
		WHERE UR.AtomId IS NOT NULL AND [RowNumber]=1
		GROUP BY CAST(UR.[DateTime] AS DATE), UR.[AtomId], UR.[Version]



/****** Object:  StoredProcedure [client].[MapAtomsFixedBets]    Script Date: 30.05.2019 20:48:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [client].[MapAtomsFixedBets] (@startDate DATE, @endDate DATE)
AS
BEGIN
	SET NOCOUNT ON

	DECLARE @endDatePlusOneDay DATE
	SELECT @endDatePlusOneDay = DATEADD(DAY, 1, @endDate)

	-- Сбросим маппинг для указанного диапазона дат
	UPDATE [crm].[FixedBets] SET [VirtAtomId]=NULL, [VirtVersion]=NULL, [VirtBindingRuleId]=NULL
	WHERE [DateTime] >= @startDate AND [DateTime] < @endDatePlusOneDay

	DECLARE @reactivationDays [INT] = 90

	-- Собираем сюдой все реактивации (записи с интервалом между ставками >=@reactivationDays)
	DECLARE @t TABLE
	(
		[Id]				BIGINT			NOT NULL,
		[UserId]			[NVARCHAR](20)	NOT NULL,
		[Value]				[NVARCHAR](200) NULL,
		[IsSite]			[BIT]			NULL,
		[IsMobile]			[BIT]			NULL,
		[SEO_Date]			[DateTime]		NULL,
		[DaysFromPrevBet]	[INT]			NULL,
		[Reg]				[BIT]			NULL,	-- Регистрации
		[VirtAtomId]		[INT]			NULL,
		[VirtVersion]		[INT]			NULL,
		[VirtBindingRuleId]	[NVARCHAR](300)	NULL

	)

	-- Найдем все реактивации для записей у которых есть Registrations но нет авторизации в [SeoUsersRefs]
	INSERT INTO @t
			([Id], [UserId], [Value], [IsSite], [IsMobile], [SEO_Date], [DaysFromPrevBet], [Reg], [VirtAtomId])
	SELECT [Id], [UserId], NULL AS [Value], IsSite, IsMobile, NULL AS [SEO_Date], [DaysFromPrevBet], 1 AS [REG], NULL AS [VirtAtomId]
		--FB_Date, SEO_ID,  Prev_FB_Date, DaysFromSeo, IsSite, IsMobile, SEO_Date, DaysFromPrevBet
	FROM (
			SELECT [Id], [UserId], NULL AS [VirtAtomId], NULL AS [VirtVersion], NULL AS [VirtBindingRuleId], DaysFromPrevBet, IsSite, IsMobile
			FROM (
				SELECT [Id], [UserId], REG_Date, FB_Date, DaysFromReg, Prev_FB_Date, IsSite, IsMobile,
					DATEDIFF(DAY, ISNULL(Prev_FB_Date, REG_Date), FB_Date) DaysFromPrevBet
				FROM (
					select FB.[Id], FB.[UserId], REG.[DateTime] REG_Date, FB.[DateTime] FB_Date, IsSite, IsMobile
						, DATEDIFF(DAY, REG.[DateTime], FB.[DateTime]) DaysFromReg
						, LAG(FB.[DateTime]) OVER (PARTITION BY FB.[UserId] ORDER BY FB.[DateTime]) Prev_FB_Date
					FROM [crm].[FixedBets] FB
					INNER JOIN [crm].[Registrations] REG ON REG.[UserId]=FB.[UserId]
					WHERE FB.[DateTime] >= @startDate AND FB.[DateTime] < @endDatePlusOneDay
						AND NOT EXISTS (SELECT ID FROM [crm].[SeoUsersRefs] SEO where REG.[UserId]=SEO.[UserId])
				) as FR
			) AS QR
			WHERE DaysFromPrevBet>@reactivationDays
	) AS WW

	-- Найдем реактивации для записей у которых нет [Registrations] но есть авторизация в [SeoUsersRefs] AND IsMobile=1
	INSERT INTO @t
				([Id], [UserId], [Value], [IsSite], [IsMobile], [SEO_Date], [DaysFromPrevBet], [Reg], [VirtAtomId])
	SELECT [Id], [UserId], [Value], IsSite, IsMobile, [SEO_Date], [DaysFromPrevBet], 0 AS [Reg], NULL AS [VirtAtomId]
		--FB_Date, SEO_ID,  Prev_FB_Date, DaysFromSeo, IsSite, IsMobile, SEO_Date, DaysFromPrevBet
	FROM (
		select [Id], [UserId], FB_Date, SEO_ID,  Prev_FB_Date, DaysFromSeo, IsSite, IsMobile, SEO_Date, [Value]
			,DATEDIFF(DAY, ISNULL(Prev_FB_Date, SEO_Date), FB_Date) [DaysFromPrevBet]
			,ROW_NUMBER() OVER (PARTITION BY [UserId] ORDER BY SEO_DATE desc) AS [RowNumber]
			-- ^^^ берем сессию ближайжую к ставке по дате
		FROM (
			select WB.[Id], WB.[UserId], FB_Date, SEO.[Id] SEO_ID, SEO.[DateTime] as SEO_Date, Prev_FB_Date, IsSite, IsMobile, SEO.[Value] AS [Value]
				,DATEDIFF(DAY, SEO.[DateTime], FB_Date) DaysFromSeo
			FROM (
				select FB.[Id], FB.[UserId], FB.[DateTime] FB_Date, FB.IsSite, FB.IsMobile
					, LAG(FB.[DateTime]) OVER (PARTITION BY FB.[UserId] ORDER BY FB.[DateTime]) Prev_FB_Date
				FROM [crm].[FixedBets] FB
				WHERE NOT EXISTS (SELECT ID FROM [crm].[Registrations] REG where REG.[UserId]=FB.[UserId])
					AND FB.[DateTime] >= @startDate AND FB.[DateTime] < @endDatePlusOneDay
			) WB 
			INNER JOIN [crm].[SeoUsersRefs] SEO ON SEO.UserId=WB.[UserId] AND SEO.DateTime<=FB_Date
	
		) QB
		WHERE DATEDIFF(DAY, ISNULL(Prev_FB_Date, SEO_Date), FB_Date)>@reactivationDays
	) WW
	WHERE [RowNumber]=1

	DECLARE 
		@rows01 [INT] = (SELECT COUNT(*) FROM @T WHERE Reg=1)
		, @rows02 [INT] = (SELECT COUNT(*) FROM @T WHERE Reg=0)
	PRINT 'Реактиваций по регистрации:'+CAST(@rows01 AS NVARCHAR)
	PRINT 'Реактиваций по SeoUserRef:'+CAST(@rows02 AS NVARCHAR)


	-- Подхватим атомы из AnalyticsSessions (для [Registrations])
	UPDATE		@t
	SET			[VirtAtomId]		= BR.[VirtAtomId],
				[VirtVersion]		= BR.[VirtVersion],
				[VirtBindingRuleId] = 'AnalyticsSessions:' + Cast(BR.[VirtBindingRuleId] as nvarchar)
	FROM		(
		-- Поиск реактивации для [Registrations]
		SELECT [Id], [VirtAtomId], [VirtVersion], [VirtBindingRuleId], [RowNumber], DaysFromPrevBet
		FROM (
			SELECT TT.[Id], GAS.[AtomId] AS [VirtAtomId], GAS.[Version] AS [VirtVersion], GAS.[BindingRuleId] AS [VirtBindingRuleId], DaysFromPrevBet
				--[UserId], REG_Date, FB_Date, DaysFromReg, Prev_FB_Date, DaysFromPrevBet, GAS.[DateTime]
				,ROW_NUMBER() OVER (PARTITION BY [UserId] ORDER BY GAS.[DateTime] DESC) AS [RowNumber]
			FROM @t AS TT
			INNER JOIN [core].[AnalyticsSessions] GAS ON GAS.[Custom3]=[UserId]
			WHERE DaysFromPrevBet>@reactivationDays
				AND TT.[Reg]=1
		) AS WR
		WHERE [RowNumber]=1 -- Ближайшая по дате и времени запись в ГА к сессии 

	) AS Br
	INNER JOIN	@t	AS A ON Br.[Id] = A.[Id] 


	-- Подхватим атомы для IsMobile=1 по [AnalyticsSessions]
	UPDATE		@t
	SET			[VirtAtomId]		= BR.[VirtAtomId],
				[VirtVersion]		= BR.[VirtVersion],
				[VirtBindingRuleId] = 'AnalyticsSessions:' + Cast(BR.[VirtBindingRuleId] as nvarchar)
	FROM		(
		SELECT [Id], [AtomId] AS [VirtAtomId], [Version] AS [VirtVersion], [BindingRuleId] AS [VirtBindingRuleId], [DaysFromPrevBet]
			--, [SEO_Date], [GAS_Date]
		FROM (

			SELECT PT.[Id], GAS.[AtomId], GAS.[Version], GAS.[BindingRuleId], [IsMobile], [DaysFromPrevBet]
				--[UserId], [Value], [IsSite], [IsMobile], [SEO_Date], GAS.[DateTime] AS [GAS_Date]
				,ROW_NUMBER() OVER (PARTITION BY [UserId] ORDER BY GAS.[DateTime] DESC) AS [RowNumber]
			FROM @t AS PT
			INNER JOIN [core].[AnalyticsSessions] GAS ON 'GA1.2.'+GAS.[ClientId]=[Value]
			WHERE GAS.[DateTime]<=[SEO_Date]	-- отбросим сессии ранее первой авторизации 
				AND [IsMobile]=1
				AND PT.[Reg]=0

			UNION ALL

			SELECT PT.[Id], GAS.[AtomId], GAS.[Version], GAS.[BindingRuleId], [IsMobile], [DaysFromPrevBet]
				--[UserId], [Value], [IsSite], [IsMobile], [SEO_Date], GAS.[DateTime] AS [GAS_Date]
				,ROW_NUMBER() OVER (PARTITION BY [UserId] ORDER BY GAS.[DateTime] DESC) AS [RowNumber]
			FROM @t AS PT
			INNER JOIN [core].[AnalyticsSessions] GAS ON GAS.[Custom3]=[UserId]
			WHERE GAS.[DateTime]<=[SEO_Date]	-- отбросим сессии ранее первой авторизации 
				AND [IsMobile]=1
				AND PT.[Reg]=0

		) AS SB
		WHERE [RowNumber]=1
			
	)	AS Br
	INNER JOIN	@t	AS A ON Br.[Id] = A.[Id] 
	WHERE Br.VirtAtomId is null

	-- Подхватим атомы для записи без атомов по PpsName
	UPDATE		@t
	SET			[VirtAtomId]		= BR.[AtomId],
				[VirtVersion]		= BR.[Version],
				[VirtBindingRuleId] = 'Pps:' + Cast(BR.[BindingRuleId] as nvarchar)
	FROM		(
		SELECT [Id], [AtomId], [Version], [BindingRuleId], [DaysFromPrevBet]
		FROM (

			SELECT PT.[Id], BR.[AtomId], BR.[Version], BR.[Id] AS [BindingRuleId], [DaysFromPrevBet]
			FROM @t AS PT
			INNER JOIN [crm].[FixedBets] FB ON FB.[VirtAtomId]=PT.Id
			INNER JOIN [crm].[BindingRules] BR ON BR.[Pps]=FB.[PpsName]
			
		) AS SB
	) AS br
	INNER JOIN	@t	AS A ON Br.[Id] = A.[Id] 
	WHERE A.[VirtAtomId] IS NULL

	-- Если реактивации с мобильного приложения (isMobile = 1), то привязываем к атому 1399 (временное решение, до настройки события).
	UPDATE TT
	SET		[VirtAtomId]		= 1399,
			[VirtVersion]		= 1
	FROM @t AS TT
	WHERE TT.[VirtAtomId] IS NULL AND TT.[IsMobile]=1 

	-- Если не удалось определить источник реактивации при isSite= 1, то привязываем к атому 1402
	UPDATE TT
	SET		[VirtAtomId]		= 1402,
			[VirtVersion]		= 1
	FROM @t AS TT
	WHERE TT.[VirtAtomId] IS NULL AND TT.[IsSite]=1

	-- Апдейтим реактивации 
	UPDATE		[crm].[FixedBets]	
	SET			[VirtAtomId]		= ISNULL(T.[VirtAtomId], 0),
				[VirtVersion]		= ISNULL(T.[VirtVersion], 1),
				[VirtBindingRuleId] = T.[VirtBindingRuleId],
				[ReactivatedDays] = DaysFromPrevBet
	FROM		[crm].[FixedBets]	AS A
	INNER JOIN	@t AS T ON A.[Id] = T.[Id]

	SET @rows01 = (SELECT COUNT(*) FROM @T WHERE Reg=1 AND VirtAtomId IS NOT NULL)
	SET @rows02 = (SELECT COUNT(*) FROM @T WHERE Reg=0 AND VirtAtomId IS NOT NULL)
	PRINT 'Найдено атомов для реактиваций по регистрации:'+CAST(@rows01 AS NVARCHAR)
	PRINT 'Найдено атомов реактиваций по SeoUserRef:'+CAST(@rows02 AS NVARCHAR)


	/*
	-- Маппинг записей не являющихся реактивацией. Атомы берем из Registration
	UPDATE		[crm].[FixedBets]	
	SET			[VirtAtomId]		= ISNULL(REG.[AtomId], 0),
				[VirtVersion]		= ISNULL(REG.[Version], 1),
				[VirtBindingRuleId] = REG.[BindingRuleId]
	FROM		[crm].[FixedBets]	AS A
	INNER JOIN	[crm].[Registrations] AS REG ON REG.[UserId]=A.[UserId]
	WHERE A.[VirtAtomId] IS NULL AND REG.[AtomId] IS NOT NULL
	*/

END
