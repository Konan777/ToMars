http://www.lagom.nl/lcd-test/inversion.php

https://docs.microsoft.com/ru-ru/aspnet/core/web-api/action-return-types?view=aspnetcore-2.2
https://msdn.microsoft.com/en-us/magazine/dn802603.aspx
https://stackoverflow.com/questions/41953102/using-async-await-or-task-in-web-api-controller-net-core
https://docs.microsoft.com/en-us/aspnet/web-api/overview/testing-and-debugging/unit-testing-with-aspnet-web-api
https://code-maze.com/unit-testing-aspnetcore-web-api/

    public class BaseCrmReader : IReader<ClientResponse>
    {
        protected readonly LogClient _logger;
        protected readonly string _login;
        protected readonly string _password;
        public BaseCrmReader(LogClient logger, string login, string password)
        {
            _logger = logger;
            _login = login;
            _password = password;
        }
        public List<T> Read(DateTime startDate, DateTime endDate, int threadNum)
        {
            if (CancellationContext.Current != null && CancellationContext.Current.IsCancellationRequested)
                return new List<T>();
            _logger.LogFormat(LogLevel.Message, $"Поток {threadNum}, период {startDate}-{endDate}");
            var result = new List<T>();

            var wgnrClient = new WgnrOnlineWebRef.E2E1WS();
            wgnrClient.PreAuthenticate = true;
            wgnrClient.Credentials = new System.Net.NetworkCredential(_login, _password);
            var interval = new WgnrOnlineWebRef.DateTimeIntervalRequest() { StartDate = startDate, EndDate = endDate };
            switch (typeof(T).ToString())
            {
                case "CarSaleResponse":
                    result = wgnrClient.GetCarSale(inteval).ToList();
                    break;
                case "ClientResponse":
                    result = wgnrClient.GetClient(inteval).ToList();
                    break;
                case "ClientTrafficResponse":
                    result = wgnrClient.GetClientTraffic(inteval).ToList();
                    break;
                case "PotCliResponse":
                    result = wgnrClient.GetPotCli(inteval).ToList();
                    break;
                case "PotCliEventResponse":
                    result = wgnrClient.GetPotCliEvent(inteval).ToList();
                    break;
                case "PotCliPlanResponse":
                    result = wgnrClient.GetPotCliPlan(inteval).ToList();
                    break;
                case "TestDriveResponse":
                    result = wgnrClient.GetTestDrive(inteval).ToList();
                    break;
            }
            _logger.LogFormat(LogLevel.Message, $"Поток {threadNum}, прочитано {result.Count} записей");
            return result;

        }
    }
    
http://api.callkeeper.ru/getDoc#
импортер звонков из Callkeeper (а может такой уже есть), тогда просто подключить.
Кажется нам нужен будет метод «getCallsInfo»
хорошо бы посмотреть ответ у разных методов, потом понять, что будем писать в БД
