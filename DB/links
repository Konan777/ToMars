https://github.com/JanKallman/EPPlus

ALTER PROCEDURE [client].[MapAtomsFixedBets] (@startDate DATE, @endDate DATE)
AS
BEGIN
	SET NOCOUNT ON

	DECLARE @endDatePlusOneDay DATE
	SELECT @endDatePlusOneDay = DATEADD(DAY, 1, @endDate)

	DECLARE @reactivationDays [INT] = 90

	-- TODO: Тащить все рекативации во временную таблицу и дальше работать с ней

	-- Сбросим маппинг для указанного диапазона дат
	UPDATE [crm].[FixedBets] SET [AtomId]=NULL, [Version]=NULL, [BindingRuleId]=NULL
	WHERE [DateTime] >= @startDate AND [DateTime] < @endDatePlusOneDay

	-- Подхватим атомы из AnalyticsSessions (для [Registrations])
	UPDATE		[crm].[FixedBets]
	SET			[AtomId]		= BR.[AtomId],
				[Version]		= BR.[Version],
				[BindingRuleId] = 'AnalyticsSessions:' + Cast(BR.[BindingRuleId] as nvarchar),
				[ReactivatedDays] = DaysFromPrevBet
	FROM		(
		-- Поиск реактивации для [Registrations]
		SELECT [Id], [AtomId], [Version], [BindingRuleId], [RowNumber], DaysFromPrevBet
		FROM (
			SELECT QR.[Id], GAS.[AtomId], GAS.[Version], GAS.[BindingRuleId], DaysFromPrevBet
				--[UserId], REG_Date, FB_Date, DaysFromReg, Prev_FB_Date, DaysFromPrevBet, GAS.[DateTime]
				,ROW_NUMBER() OVER (PARTITION BY [UserId] ORDER BY GAS.[DateTime] DESC) AS [RowNumber]
			FROM (
				SELECT [Id], [UserId], REG_Date, FB_Date, DaysFromReg, Prev_FB_Date, 
					DATEDIFF(DAY, ISNULL(Prev_FB_Date, REG_Date), FB_Date) DaysFromPrevBet
				FROM (
					select FB.[Id], FB.[UserId], REG.[DateTime] REG_Date, FB.[DateTime] FB_Date
						, DATEDIFF(DAY, REG.[DateTime], FB.[DateTime]) DaysFromReg
						, LAG(FB.[DateTime]) OVER (PARTITION BY FB.[UserId] ORDER BY FB.[DateTime]) Prev_FB_Date
					FROM [crm].[FixedBets] FB
					INNER JOIN [crm].[Registrations] REG ON REG.[UserId]=FB.[UserId]
					WHERE FB.[DateTime] >= @startDate AND FB.[DateTime] < @endDatePlusOneDay
				) as FR
			) AS QR
			INNER JOIN [core].[AnalyticsSessions] GAS ON GAS.[Custom3]=[UserId]
			WHERE DaysFromPrevBet>@reactivationDays
		) AS WR
		WHERE [RowNumber]=1 -- Ближайшая по дате и времени запись в ГА к сессии 

	)	AS Br
	INNER JOIN	[crm].[FixedBets]	AS A ON Br.[Id] = A.[Id] AND Br.[RowNumber] = 1


	-- { Найдем реактивации для записей у которых нет [Registrations] но есть авторизация в [SeoUsersRefs] AND IsMobile=1
	DECLARE @t TABLE
	(
		[Id]		BIGINT			NOT NULL,
		[UserId]	[NVARCHAR](20)	NOT NULL,
		[Value]		[NVARCHAR](200) NOT NULL,
		[IsSite]	[BIT]			NULL,
		[IsMobile]	[BIT]			NULL,
		[SEO_Date]	[DateTime]		NULL,
		[DaysFromPrevBet]	[INT]	NULL
	)

	INSERT INTO @t
				([Id], [UserId], [Value], [IsSite], [IsMobile], [SEO_Date], [DaysFromPrevBet])
	SELECT [Id], [UserId], [Value], IsSite, IsMobile, [SEO_Date], [DaysFromPrevBet]
		--FB_Date, SEO_ID,  Prev_FB_Date, DaysFromSeo, IsSite, IsMobile, SEO_Date, DaysFromPrevBet
	FROM (
		select [Id], [UserId], FB_Date, SEO_ID,  Prev_FB_Date, DaysFromSeo, IsSite, IsMobile, SEO_Date, [Value]
			,DATEDIFF(DAY, ISNULL(Prev_FB_Date, SEO_Date), FB_Date) DaysFromPrevBet
			,ROW_NUMBER() OVER (PARTITION BY [UserId] ORDER BY SEO_DATE desc) AS [RowNumber]
			-- ^^^ берем сессию ближайжую к ставке по дате
		FROM (
			select WB.[Id], WB.[UserId], FB_Date, SEO.[Id] SEO_ID, SEO.[DateTime] as SEO_Date, Prev_FB_Date, IsSite, IsMobile, SEO.[Value] AS [Value]
				,DATEDIFF(DAY, SEO.[DateTime], FB_Date) DaysFromSeo
			FROM (
				select FB.[Id], FB.[UserId], FB.[DateTime] FB_Date, FB.IsSite, FB.IsMobile
					, LAG(FB.[DateTime]) OVER (PARTITION BY FB.[UserId] ORDER BY FB.[DateTime]) Prev_FB_Date
				FROM [crm].[FixedBets] FB
				WHERE NOT EXISTS (SELECT ID FROM [crm].[Registrations] REG where REG.[UserId]=FB.[UserId])
					AND FB.[DateTime] >= @startDate AND FB.[DateTime] < @endDatePlusOneDay
			) WB 
			INNER JOIN [crm].[SeoUsersRefs] SEO ON SEO.UserId=WB.[UserId] AND SEO.DateTime<=FB_Date
	
		) QB
		WHERE DATEDIFF(DAY, ISNULL(Prev_FB_Date, SEO_Date), FB_Date)>@reactivationDays
	) WW
	WHERE [RowNumber]=1
	-- } Найдем реактивации для записей у которых нет [Registrations] но есть авторизация в [SeoUsersRefs] AND IsMobile=1

	-- Мапим реактивации для IsMobile=1 по [AnalyticsSessions]
	UPDATE		[crm].[FixedBets]
	SET			[AtomId]		= BR.[AtomId],
				[Version]		= BR.[Version],
				[BindingRuleId] = 'AnalyticsSessions:' + Cast(BR.[BindingRuleId] as nvarchar),
				[ReactivatedDays] = DaysFromPrevBet
	FROM		(
		SELECT [Id], [AtomId], [Version], [BindingRuleId], [DaysFromPrevBet]
			--, [SEO_Date], [GAS_Date]
		FROM (

			SELECT PT.[Id], GAS.[AtomId], GAS.[Version], GAS.[BindingRuleId], [IsMobile], [DaysFromPrevBet]
				--[UserId], [Value], [IsSite], [IsMobile], [SEO_Date], GAS.[DateTime] AS [GAS_Date]
				,ROW_NUMBER() OVER (PARTITION BY [UserId] ORDER BY GAS.[DateTime] DESC) AS [RowNumber]
			FROM @t AS PT
			INNER JOIN [core].[AnalyticsSessions] GAS ON 'GA1.2.'+GAS.[ClientId]=[Value]
			WHERE GAS.[DateTime]<=[SEO_Date]	-- отбросим сессии ранее первой авторизации 
				AND [IsMobile]=1

			UNION ALL

			SELECT PT.[Id], GAS.[AtomId], GAS.[Version], GAS.[BindingRuleId], [IsMobile], [DaysFromPrevBet]
				--[UserId], [Value], [IsSite], [IsMobile], [SEO_Date], GAS.[DateTime] AS [GAS_Date]
				,ROW_NUMBER() OVER (PARTITION BY [UserId] ORDER BY GAS.[DateTime] DESC) AS [RowNumber]
			FROM @t AS PT
			INNER JOIN [core].[AnalyticsSessions] GAS ON GAS.[Custom3]=[UserId]
			WHERE GAS.[DateTime]<=[SEO_Date]	-- отбросим сессии ранее первой авторизации 
				AND [IsMobile]=1

		) AS SB
		WHERE [RowNumber]=1
			
	)	AS Br
	INNER JOIN	[crm].[FixedBets]	AS A ON Br.[Id] = A.[Id] 

	-- Маппинг недомапленного по PpsName
	UPDATE		[crm].[FixedBets]
	SET			[AtomId]		= BR.[AtomId],
				[Version]		= BR.[Version],
				[BindingRuleId] = 'AnalyticsSessions:' + Cast(BR.[BindingRuleId] as nvarchar),
				[ReactivatedDays] = DaysFromPrevBet
	FROM		(
		SELECT [Id], [AtomId], [Version], [BindingRuleId], [DaysFromPrevBet]
		FROM (

			SELECT PT.[Id], BR.[AtomId], BR.[Version], BR.[Id] AS [BindingRuleId], [DaysFromPrevBet]
			FROM @t AS PT
			INNER JOIN [crm].[FixedBets] FB ON FB.AtomId=PT.Id
			INNER JOIN [crm].[BindingRules] BR ON BR.[Pps]=FB.[PpsName]
			
		) AS SB
	) AS br
	INNER JOIN	[crm].[FixedBets]	AS A ON Br.[Id] = A.[Id] 
	WHERE A.[AtomId] IS NULL

	-- Маппинг записей не являющихся реактивацией. Атомы берем из Registration

END



Задача максимум:
Распаралелить не только вставку в БД но и запросы к API. При условии что задан интервал в несколько дней.
На форму добавим слайдеры с кол-вом потоков на запросы к API и кол-во потоков на вставку.
В некий класс будет приходить интерфейс для создания имортера и экспортера (типа фабрика: getReader/getWriter)
Импортеры и экспортеры получат унифицированный интерфейс (read/write).
Могут быть ситуации:
- Все в одном потоке, и чтение и запись
- Чтение в одном потоке запись в нескольких
- Чтение в нескольких потоках запись в одном
- Все в несколько потоков
Алгоритм:
- Основной поток в цикле с даты по дату запускает N потоков на чтение
- Читающий(у) поток(и) пишут данные в ConcurentBag. 
- все потоки закончили чтение.
  - ждем окончание прошлой вставки (некий флаг)
  - фасуем данные на кол-во потоков для записи
  - пускаем N потоков записи данных
    - нужен анализ какой интервал дат нужно чистить в БД
    - взводим флаг того, что идет вставка
    - по окончанию вставки взводим флаг о ее окончании
  - идем в начало алгоритма 
  - на каждом этапе нужен анализ отмены обработки








ALTER PROCEDURE [client].[MapAtomsRegistrations] (@startDate DATE, @endDate DATE)
AS
BEGIN
	SET NOCOUNT ON

	DECLARE @endDatePlusOneDay DATE
	SELECT @endDatePlusOneDay = DATEADD(DAY, 1, @endDate)

	-- Сбросим маппинг для указанного диапазона дат
	UPDATE [crm].[Registrations] SET [AtomId]=NULL, [Version]=NULL, [BindingRuleId]=NULL
	WHERE [DateTime] >= @startDate AND [DateTime] < @endDatePlusOneDay

	
	-- Подхватим атомы из AnalyticsSessions
	UPDATE		[crm].[Registrations]
	SET			[AtomId]		= BR.[AtomId],
				[Version]		= BR.[Version],
				[BindingRuleId] = 'AnalyticsSessions:' + Cast(BR.[BindingRuleId] as nvarchar)
	FROM		(
		SELECT FREG.[id], FREG.[AtomId], FREG.[Version], FREG.[BindingRuleId]
			,ROW_NUMBER() OVER (PARTITION BY FREG.[Id] ORDER BY FREG.[GASDate]) AS [RowNumber]
		FROM (

			-- Ищем по [ClientId]
			SELECT [id], SeoDate, [AtomId], [Version], [BindingRuleId], GASDate, [RowNumber]
			FROM(
				SELECT REG.[id], FSEO.[DateTime] SeoDate, GAS.[AtomId], GAS.[Version], GAS.[BindingRuleId], GAS.[DateTime] GASDate, REG.UserId
					,ROW_NUMBER() OVER (PARTITION BY FSEO.[UserId] ORDER BY GAS.[DateTime] DESC) AS [RowNumber]
				FROM [crm].[Registrations] REG
				INNER JOIN (
					SELECT [UserId], [DateTime], SEO.[Value]
					,ROW_NUMBER() OVER (PARTITION BY SEO.[UserId] ORDER BY SEO.[DateTime]) AS [RowNumber]
					FROM [crm].[SeoUsersRefs] SEO
					WHERE SEO.[Source]='google' 
				) AS FSEO ON FSEO.UserId=REG.UserId 
				INNER JOIN [core].[AnalyticsSessions] GAS ON 'GA1.2.'+GAS.[ClientId]=FSEO.[Value]
				WHERE  REG.[DateTime] >= @startDate AND REG.[DateTime] < @endDatePlusOneDay
					AND REG.[Hostname] IS NOT NULL 
					AND FSEO.[RowNumber]=1 				-- первая авторизация
					AND GAS.[DateTime]<=FSEO.[DateTime]	-- отбросим сессии ранее первой авторизации 
			) AS MGA
			WHERE [RowNumber]=1 -- Ближайшая по дате и времени запись в ГА к сессии 


			UNION ALL
			
			-- Ищем по [Custom3]
			SELECT [id], SeoDate, [AtomId], [Version], [BindingRuleId], GASDate, [RowNumber]
			FROM(
				SELECT REG.[id], FSEO.[DateTime] SeoDate, GAS.[AtomId], GAS.[Version], GAS.[BindingRuleId], GAS.[DateTime] GASDate
					,ROW_NUMBER() OVER (PARTITION BY FSEO.[UserId] ORDER BY GAS.[DateTime] DESC) AS [RowNumber]
				FROM [crm].[Registrations] REG
				INNER JOIN (
					SELECT [UserId], [DateTime]
						,ROW_NUMBER() OVER (PARTITION BY SEO.[UserId] ORDER BY SEO.[DateTime]) AS [RowNumber]
					FROM [crm].[SeoUsersRefs] SEO
					WHERE SEO.[Source]='google' 
				) AS FSEO ON FSEO.UserId=REG.UserId 
				INNER JOIN [core].[AnalyticsSessions] GAS ON GAS.[Custom3]=REG.[UserId]
				WHERE  REG.[DateTime] >= @startDate AND REG.[DateTime] < @endDatePlusOneDay
					AND REG.[Hostname] IS NOT NULL 
					AND FSEO.[RowNumber]=1 				-- первая авторизация
					AND GAS.[DateTime]<=FSEO.[DateTime]	-- отбросим сессии ранее первой авторизации 
					AND REG.[AtomId] IS NULL			-- Не трогаем ранее примапленные записи
			) AS MGA
			WHERE [RowNumber]=1 -- Ближайшая по дате и времени запись в ГА к сессии 


		) AS FREG
	)	AS Br
	INNER JOIN	[crm].[Registrations]	AS A ON Br.[Id] = A.[Id] AND Br.[RowNumber] = 1

	-- Маппинг на основе AppsFlyerInstalls
	UPDATE		[crm].[Registrations]
	SET			[AtomId]		= BR.[AtomId],
				[Version]		= BR.[Version],
				[BindingRuleId] = 'AppsFlyer:' + Cast(BR.[BindingRuleId] as nvarchar)
	FROM		(
		SELECT FREG.[id], FREG.[AtomId], FREG.[Version], FREG.[BindingRuleId]
		FROM (

			SELECT REG.[id], FSEO.[DateTime] SeoDate, AFI.[AtomId], AFI.[Version], AFI.[BindingRuleId], AFI.[InstallTime] AFIDate
			FROM [crm].[Registrations] REG
			INNER JOIN (
				SELECT [UserId], [DateTime], SEO.[Value]
					,ROW_NUMBER() OVER (PARTITION BY SEO.[UserId] ORDER BY SEO.[DateTime]) AS [RowNumber]
				FROM [crm].[SeoUsersRefs] SEO
				WHERE SEO.[Source]='appsflyer' 
			) AS FSEO ON FSEO.UserId=REG.UserId 
			INNER JOIN [client].[AppsFlyerInstallsDataRaw] AFI ON AFI.[AppsFlyerId]=FSEO.[Value]
			WHERE  REG.[DateTime] >= @startDate AND REG.[DateTime] < @endDatePlusOneDay
				AND REG.[Mobile] IS NOT NULL
				AND FSEO.[RowNumber]=1 		-- первая авторизация
				AND REG.[AtomId] IS NULL	-- Не трогаем ранее примапленные записи
				AND AFI.[InstallTime]<=FSEO.[DateTime]	-- отбросим записи ранее первой авторизации 
		) AS FREG	
	)	AS Br
	INNER JOIN	[crm].[Registrations]	AS A ON Br.[Id] = A.[Id] 

	-- Маппинг на основе BindingRulesPromocodes
	UPDATE		[crm].[Registrations]
	SET			[AtomId]		= BR.[AtomId],
				[Version]		= BR.[Version],
				[BindingRuleId] = 'Promocode:' + Cast(BR.[BindingRuleId] as nvarchar)
	FROM		(
		SELECT REG.[id], REG.[AtomId], REG.[Version], REG.[BindingRuleId]
		FROM (
			SELECT FREG.[id], FREG.[AtomId], FREG.[Version], FREG.[BindingRuleId]
				 --,FREG.[SeoDate], FREG.[GASDate] -- Для проверки
				,ROW_NUMBER() OVER (PARTITION BY FREG.[Id] ORDER BY FREG.[UserId]) AS [RowNumber]
			FROM (
				SELECT REG.[id], REG.[DateTime] SeoDate, BR.[AtomId], BR.[Version], BR.[Id] as [BindingRuleId], PROM.[UserId] as [UserId]
				FROM [crm].[Registrations] REG
				INNER JOIN [crm].[Promocodes] PROM ON PROM.[UserId]=REG.UserId
				INNER JOIN [crm].[BindingRules] BR ON BR.Promocode=PROM.Promocode
				WHERE REG.[DateTime] >= @startDate AND REG.[DateTime] < @endDatePlusOneDay
					AND CAST(PROM.[DateTime] as DATE)<=CAST(REG.[DateTime] as DATE)
					AND REG.[AtomId] IS NULL	-- Не трогаем ранее примапленные записи
			) FREG
		) REG 
		WHERE REG.RowNumber=1
	)	AS Br
	INNER JOIN	[crm].[Registrations]	AS A ON Br.[Id] = A.[Id] 

	-- Маппинг на основе BindingRulesPps
	UPDATE		[crm].[Registrations]
	SET			[AtomId]		= BR.[AtomId],
				[Version]		= BR.[Version],
				[BindingRuleId] = 'Pps:' + Cast(BR.[BindingRuleId] as nvarchar)
	FROM		(
		SELECT REG.[id], BR.[AtomId], BR.[Version], BR.[Id] as [BindingRuleId]
		FROM [crm].[Registrations] REG
		INNER JOIN [crm].[BindingRules] BR ON BR.[Pps]=REG.Pps
		WHERE REG.[DateTime] >= @startDate AND REG.[DateTime] < @endDatePlusOneDay
			AND (REG.[Hostname] IS NULL AND REG.[Mobile] IS NULL)
			AND REG.[AtomId] IS NULL	-- Не трогаем ранее примапленные записи	
	)	AS Br
	INNER JOIN	[crm].[Registrations]	AS A ON Br.[Id] = A.[Id] 


	-- Проставим атом по умолчанию для записей оставшихся без атома
	UPDATE	[crm].[Registrations]
	SET		[AtomId]		= 0,
			[Version]		= 1,
			[BindingRuleId] = NULL
	WHERE	[DateTime] >= @startDate AND [DateTime] < @endDatePlusOneDay
			AND ([Hostname] IS NOT NULL OR [Mobile] IS NOT NULL)
			AND [AtomId] IS NULL 
			

END


CREATE TABLE [crm].[Persons](
	[Id] [bigint] IDENTITY(1,1) NOT NULL,
	[DateTime] [datetime] NOT NULL,
	[PersonId] [nvarchar](50) NULL,
	[UserId] [nvarchar](20) NOT NULL,
 CONSTRAINT [PK_Persons] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

/****** Object:  Table [crm].[Payments]    Script Date: 14.05.2019 20:38:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [crm].[Payments](
	[Id] [bigint] IDENTITY(1,1) NOT NULL,
	[DateTime] [datetime] NOT NULL,
	[UserId] [nvarchar](20) NOT NULL,
	[Direction] [int] NULL,
	[Amount] [money] NOT NULL,
	[Bonus] [bit] NOT NULL,
 CONSTRAINT [PK_Payments] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

/****** Object:  Table [crm].[Profits]    Script Date: 14.05.2019 20:38:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [crm].[Profits](
	[Id] [bigint] IDENTITY(1,1) NOT NULL,
	[DateTime] [datetime] NOT NULL,
	[UserId] [nvarchar](20) NOT NULL,
	[ProfitValue] [money] NOT NULL,
 CONSTRAINT [PK_Profits] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

/****** Object:  Table [crm].[SeoUsersRefs]    Script Date: 14.05.2019 20:38:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [crm].[SeoUsersRefs](
	[Id] [bigint] IDENTITY(1,1) NOT NULL,
	[DateTime] [datetime] NOT NULL,
	[UserId] [nvarchar](20) NOT NULL,
	[Value] [nvarchar](200) NOT NULL,
	[Source] [nvarchar](200) NOT NULL,
 CONSTRAINT [PK_SeoUsersRefs] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

/****** Object:  Table [crm].[CupisState]    Script Date: 14.05.2019 20:38:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [crm].[CupisState](
	[Id] [bigint] IDENTITY(1,1) NOT NULL,
	[DateTime] [datetime] NOT NULL,
	[UserId] [nvarchar](20) NOT NULL,
	[CupisState] [int] NOT NULL,
 CONSTRAINT [PK_CupisState] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

/****** Object:  Table [crm].[FixedBets]    Script Date: 14.05.2019 20:38:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [crm].[FixedBets](
	[Id] [bigint] IDENTITY(1,1) NOT NULL,
	[DateTime] [datetime] NOT NULL,
	[UserId] [nvarchar](20) NOT NULL,
	[Amount] [money] NULL,
	[BetsCount] [int] NULL,
	[PpsName] [nvarchar](200) NULL,
	[IsPps] [bit] NULL,
	[IsMobile] [bit] NULL,
	[IsSite] [bit] NULL,
	[AtomId] [int] NULL,
	[Version] [int] NULL,
	[BindingRuleId] [nvarchar](300) NULL,
	[Days] [int] NULL,
	[ReactivatedDays] [int] NULL,
 CONSTRAINT [PK_FixedBets] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

/****** Object:  Table [crm].[BindingRules]    Script Date: 14.05.2019 20:38:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [crm].[BindingRules](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[AtomId] [int] NOT NULL,
	[Version] [int] NOT NULL,
	[Promocode] [nvarchar](100) NULL,
	[Pps] [nvarchar](300) NULL,
	[Hostname] [nvarchar](300) NULL,
	[Mobile] [nvarchar](300) NULL,
	[StartDate] [date] NOT NULL,
	[EndDate] [date] NOT NULL,
	[Priority] [int] NOT NULL,
 CONSTRAINT [PK_BindingRules] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

/****** Object:  Table [crm].[Promocodes]    Script Date: 14.05.2019 20:38:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [crm].[Promocodes](
	[Id] [bigint] IDENTITY(1,1) NOT NULL,
	[DateTime] [datetime] NOT NULL,
	[UserId] [nvarchar](20) NOT NULL,
	[Promocode] [nvarchar](100) NULL,
 CONSTRAINT [PK_Promocodes] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

/****** Object:  Table [crm].[SettledBets]    Script Date: 14.05.2019 20:38:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [crm].[SettledBets](
	[Id] [bigint] IDENTITY(1,1) NOT NULL,
	[DateTime] [datetime] NOT NULL,
	[UserId] [nvarchar](20) NULL,
	[WinSum] [money] NULL,
	[BetsCount] [int] NULL,
	[PpsName] [nvarchar](200) NULL,
	[IsPps] [bit] NULL,
	[IsMobile] [bit] NULL,
	[IsSite] [bit] NULL,
 CONSTRAINT [PK_SettledBets] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

/****** Object:  Table [crm].[Registrations]    Script Date: 14.05.2019 20:38:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [crm].[Registrations](
	[Id] [bigint] IDENTITY(1,1) NOT NULL,
	[DateTime] [datetime] NOT NULL,
	[UserId] [nvarchar](20) NOT NULL,
	[SiteId] [int] NULL,
	[Hostname] [nvarchar](300) NULL,
	[Pps] [nvarchar](300) NULL,
	[Mobile] [nvarchar](300) NULL,
	[AtomId] [int] NULL,
	[Version] [int] NULL,
	[BindingRuleId] [nvarchar](300) NULL,
 CONSTRAINT [PK_Registrations] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

/****** Object:  Table [crm].[Users]    Script Date: 14.05.2019 20:38:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [crm].[Users](
	[Id] [bigint] IDENTITY(1,1) NOT NULL,
	[DateTime] [datetime] NOT NULL,
	[UserId] [nvarchar](20) NOT NULL,
	[Lang] [nvarchar](20) NOT NULL,
	[IsCupis] [bit] NOT NULL,
 CONSTRAINT [PK_Users] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

/****** Object:  Table [crm].[UserStatuses]    Script Date: 14.05.2019 20:38:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [crm].[UserStatuses](
	[Id] [bigint] IDENTITY(1,1) NOT NULL,
	[DateTime] [datetime] NOT NULL,
	[UserId] [nvarchar](20) NOT NULL,
	[Status] [nvarchar](50) NULL,
	[Rate] [int] NULL,
 CONSTRAINT [PK_UserStatuses] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE [crm].[BindingRules] ADD  DEFAULT (N'2000-01-01') FOR [StartDate]
GO

ALTER TABLE [crm].[BindingRules] ADD  DEFAULT (N'2100-12-31') FOR [EndDate]
GO


